package tests.partialEvaluation.higherOrder

workflow callToBlockLambda {
    val lambda = (a) { yield result = a; };
    lambda(1);
}

workflow callToExpressionLambda {
    val lambda = (a) -> a;
    lambda(1);
}

step myStep1(a: Int) -> result: Int {
    yield result = a;
}

workflow callToStep {
    myStep1(1);
}

step myStep2(vararg params: Int) -> result: Int {
    yield result = params;
}

workflow callToStepWithVariadicParameter {
    myStep2(1);
}

step myStep3(vararg params: Int) -> result: Int {
    yield result = params[0];
}

workflow callToStepWithIndexedVariadicParameter {
    myStep3(1);
}

workflow parameterAssignedDuringCall {
    ((a, b) { 
        val d = b;
        yield result = ((b, c) -> a + b + c + d)(1, 2);
    })(3, 4);
}

step myStep4(param: Int) -> f: () -> (result: Int) {
    yield f = () -> param;
}

workflow parameterAssignedDuringCreationOfLambda {
    myStep4(1)();
}

workflow lambdaAsParameter {
    val apply = (f) -> f();

    apply(() -> 1);
}
