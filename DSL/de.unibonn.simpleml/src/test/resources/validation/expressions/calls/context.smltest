package tests.validation.expressions.calls.context

class MyClass() {
    fun noResults()
    fun oneResult() -> first: Int
    fun twoResults() -> (first: Int, second: Int)
}
class MyClassWithoutConstructor

enum MyEnum {
    MyVariant()
    MyVariantWithoutConstructor
}

fun functionNoResults()
fun functionOneResult() -> first: Int
fun functionTwoResults() -> (first: Int, second: Int)

step stepNoResults() {}
step stepOneResult() -> first: Int {}
step stepTwoResults() -> (first: Int, second: Int) {}

step test(
    paramNoResults: () -> (),
    paramOneResult: () -> first: Int,
    paramTwoResults: () -> (first: Int, second: Int)
) {
    val lambdaNoResults = () {};
    val lambdaOneResult = () {
        yield first = 1;
    };
    val lambdaTwoResults = () {
        yield first = 1;
        yield second = 2;
    };

	// no_semantic_error "A call that produces no results is not allowed in this context."
    val a = »MyClass«();
	// no_semantic_error "A call that produces multiple results is not allowed in this context."
    val b = »MyClass«();

    // no_semantic_error "A call that produces no results is not allowed in this context."
    val c = »MyClassWithoutConstructor«();
	// no_semantic_error "A call that produces multiple results is not allowed in this context."
    val d = »MyClassWithoutConstructor«();

    // no_semantic_error "A call that produces no results is not allowed in this context."
    val e = »MyEnum.MyVariant«();
	// no_semantic_error "A call that produces multiple results is not allowed in this context."
    val f = »MyEnum.MyVariant«();

    // no_semantic_error "A call that produces no results is not allowed in this context."
    val g = »MyEnum.MyVariantWithoutConstructor«();
	// no_semantic_error "A call that produces multiple results is not allowed in this context."
    val h = »MyEnum.MyVariantWithoutConstructor«();

	// semantic_error "A call that produces no results is not allowed in this context."
    MyClass().»noResults«() + 1;
    // no_semantic_error "A call that produces no results is not allowed in this context."
    MyClass().»oneResult«() - 1;
    // no_semantic_error "A call that produces multiple results is not allowed in this context."
    MyClass().»oneResult«() * 1;
    // semantic_error "A call that produces multiple results is not allowed in this context."
    MyClass().»twoResults«() / 1;

    // semantic_error "A call that produces no results is not allowed in this context."
    »functionNoResults«() + 1;
    // no_semantic_error "A call that produces no results is not allowed in this context."
    »functionOneResult«() - 1;
    // no_semantic_error "A call that produces multiple results is not allowed in this context."
    »functionOneResult«() * 1;
    // semantic_error "A call that produces multiple results is not allowed in this context."
    »functionTwoResults«() / 1;

    // semantic_error "A call that produces no results is not allowed in this context."
    »stepNoResults«() + 1;
    // no_semantic_error "A call that produces no results is not allowed in this context."
    »stepOneResult«() - 1;
    // no_semantic_error "A call that produces multiple results is not allowed in this context."
    »stepOneResult«() * 1;
    // semantic_error "A call that produces multiple results is not allowed in this context."
    »stepTwoResults«() / 1;

    // semantic_error "A call that produces no results is not allowed in this context."
    »paramNoResults«() + 1;
    // no_semantic_error "A call that produces no results is not allowed in this context."
    »paramOneResult«() - 1;
    // no_semantic_error "A call that produces multiple results is not allowed in this context."
    »paramOneResult«() * 1;
    // semantic_error "A call that produces multiple results is not allowed in this context."
    »paramTwoResults«() / 1;

    // semantic_error "A call that produces no results is not allowed in this context."
    »lambdaNoResults«() + 1;
    // no_semantic_error "A call that produces no results is not allowed in this context."
    »lambdaOneResult«() - 1;
    // no_semantic_error "A call that produces multiple results is not allowed in this context."
    »lambdaOneResult«() * 1;
    // semantic_error "A call that produces multiple results is not allowed in this context."
    »lambdaTwoResults«() / 1;

    // no_semantic_error "A call that produces no results is not allowed in this context."
    »functionNoResults«();
    // no_semantic_error "A call that produces multiple results is not allowed in this context."
    »functionTwoResults«();

    // semantic_error "A call that produces no results is not allowed in this context."
    »functionNoResults«().first;
    // no_semantic_error "A call that produces multiple results is not allowed in this context."
    »functionTwoResults«().first;

    // semantic_error "A call that produces no results is not allowed in this context."
    val x = »functionNoResults«();
    // no_semantic_error "A call that produces multiple results is not allowed in this context."
    val y, val z = »functionTwoResults«();
}
