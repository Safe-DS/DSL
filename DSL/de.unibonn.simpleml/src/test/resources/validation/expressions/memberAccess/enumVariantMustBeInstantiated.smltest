package tests.validation.expressions.memberAccesses.enumVariantMustBeInstantiated

enum MyEnum {
    A
    B()
    C(c: Int = 0)
    D(d: Int)
    E<T>
}

workflow test {

    // no_semantic_error "An enum variant with parameters or type parameters must be instantiated."
    MyEnum.»A«;
    // no_semantic_error "An enum variant with parameters or type parameters must be instantiated."
    MyEnum.»A«();

    // no_semantic_error "An enum variant with parameters or type parameters must be instantiated."
    MyEnum.»B«;
    // no_semantic_error "An enum variant with parameters or type parameters must be instantiated."
    MyEnum.»B«();

    // semantic_error "An enum variant with parameters or type parameters must be instantiated."
    MyEnum.»C«;
    // no_semantic_error "An enum variant with parameters or type parameters must be instantiated."
    MyEnum.»C«();

    // semantic_error "An enum variant with parameters or type parameters must be instantiated."
    MyEnum.»D«;
    // no_semantic_error "An enum variant with parameters or type parameters must be instantiated."
    MyEnum.»D«();

    // semantic_error "An enum variant with parameters or type parameters must be instantiated."
    MyEnum.»E«;
    // no_semantic_error "An enum variant with parameters or type parameters must be instantiated."
    MyEnum.»E«();

    // no_semantic_error "An enum variant with parameters or type parameters must be instantiated."
    MyEnum.»Unresolved«;
    // no_semantic_error "An enum variant with parameters or type parameters must be instantiated."
    MyEnum.»Unresolved«();
}
