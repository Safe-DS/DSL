package test.scoping.references.toParameters.ofContainingBlockLambda

segment mySegment(myShadowedSegmentParameter: Int) {
    val myShadowedPlaceholder = 0;

    (
        // $TEST$ target outer_myOuterBlockLambdaParameter
        »myOuterBlockLambdaParameter«,
        
        // $TEST$ target outer_myShadowedSegmentParameter
        »myShadowedSegmentParameter«,
        
        // $TEST$ target outer_myShadowedBlockLambdaParameter
        »myShadowedBlockLambdaParameter«,
        
        // $TEST$ target outer_myShadowedPlaceholder
        »myShadowedPlaceholder«,

        // $TEST$ target redeclaredAsParameter
        »redeclaredAsParameter«,
        redeclaredAsParameter,

        // $TEST$ target redeclaredAsPlaceholder
        »redeclaredAsPlaceholder«,
    ) {
        val redeclaredAsPlaceholder = 0;

        // $TEST$ references outer_myOuterBlockLambdaParameter
        »myOuterBlockLambdaParameter«;

        // $TEST$ references outer_myShadowedSegmentParameter
        »myShadowedSegmentParameter«;

        // $TEST$ references outer_myShadowedBlockLambdaParameter
        »myShadowedBlockLambdaParameter«;

        // $TEST$ references outer_myShadowedPlaceholder
        »myShadowedPlaceholder«;

        // $TEST$ references redeclaredAsParameter
        »redeclaredAsParameter«;    
        
        // $TEST$ references redeclaredAsPlaceholder
        »redeclaredAsPlaceholder«;

        // $TEST$ unresolved
        »myInnerBlockLambdaParameter«;

        (
            // $TEST$ target inner_myInnerBlockLambdaParameter
            »myInnerBlockLambdaParameter«,
            
            // $TEST$ target inner_myShadowedBlockLambdaParameter
            »myShadowedBlockLambdaParameter«
        ) {
            () ->
                // $TEST$ references outer_myOuterBlockLambdaParameter
                »myOuterBlockLambdaParameter« +

                // $TEST$ references outer_myShadowedSegmentParameter
                »myShadowedSegmentParameter« +

                // $TEST$ references inner_myShadowedBlockLambdaParameter
                »myShadowedBlockLambdaParameter«;

                // $TEST$ references outer_myShadowedPlaceholder
                »myShadowedPlaceholder« +

                // $TEST$ references redeclaredAsParameter
                »redeclaredAsParameter« +
                
                // $TEST$ references redeclaredAsPlaceholder
                »redeclaredAsPlaceholder« +

                // $TEST$ references inner_myInnerBlockLambdaParameter
                »myInnerBlockLambdaParameter«;

        };
    };
}
