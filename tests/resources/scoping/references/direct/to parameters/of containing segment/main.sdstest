package test.scoping.references.direct.toParameters.ofContainingExpressionLambda

segment mySegment(
    // $TEST$ target parameter
    »myParameter«: Int,

    // $TEST$ target redeclaredAsParameter
    »redeclaredAsParameter«: Int,
    redeclaredAsParameter: Int,

    // $TEST$ target redeclaredAsPlaceholder
    »redeclaredAsPlaceholder«: Int
) {
    val redeclaredAsPlaceholder = 0;
    
    // $TEST$ references parameter
    »myParameter«;

    // $TEST$ references redeclaredAsParameter
    »redeclaredAsParameter«;    
    
    // $TEST$ references redeclaredAsPlaceholder
    »redeclaredAsPlaceholder«;

    () {
        // $TEST$ references parameter
        »myParameter«;

        // $TEST$ references redeclaredAsParameter
        »redeclaredAsParameter«;    
        
        // $TEST$ references redeclaredAsPlaceholder
        »redeclaredAsPlaceholder«;
    };

    () -> 
        // $TEST$ references parameter
        »myParameter« +

        // $TEST$ references redeclaredAsParameter
        »redeclaredAsParameter« +
        
        // $TEST$ references redeclaredAsPlaceholder
        »redeclaredAsPlaceholder«;
}
