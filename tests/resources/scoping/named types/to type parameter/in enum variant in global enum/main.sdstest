package test.scoping.namedTypes.toTypeParameter.inEnumVariantInGlobalEnum

fun myFunction1<BeforeEnum>()

enum MyEnum {
    MyEnumVariant1<BeforeEnumVariant>

    // $TEST$ target own
    MyEnumVariant2<»Own«>(
        // $TEST$ references own
        a: »Own«,

        // $TEST$ unresolved
        b: »BeforeEnumVariant«,

        // $TEST$ unresolved
        c: »AfterEnumVariant«,

        // $TEST$ unresolved
        d: »BeforeEnum«,

        // $TEST$ unresolved
        e: »AfterEnum«,

        // $TEST$ unresolved
        f: »Unresolved«
    )

    MyEnumVariant3<AfterEnumVariant>
}

fun myFunction2<AfterEnum>()
