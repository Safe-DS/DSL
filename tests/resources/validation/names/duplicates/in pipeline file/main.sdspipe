package tests.validation.names.inPipelineFile

// $TEST$ no error r"A declaration with name '\w*' was imported already\."
from tests.validation.names.inPipelineFile.other import »UniqueImport«

// $TEST$ no error r"A declaration with name '\w*' was imported already\."
from tests.validation.names.inPipelineFile.other import »DuplicateImport«
// $TEST$ error "A declaration with name 'DuplicateImport' was imported already."
from tests.validation.names.inPipelineFile.other import »DuplicateImport«

// $TEST$ no error r"A declaration with name '\w*' was imported already\."
// $TEST$ error "A declaration with name 'DuplicateAliasedImport' was imported already."
from tests.validation.names.inPipelineFile.other import »DuplicateAliasedImport«, DuplicateImport as »DuplicateAliasedImport«

// $TEST$ no error r"A declaration with name '\w*' was imported already\."
from tests.validation.names.inPipelineFile.other import »Unresolved«
// $TEST$ no error r"A declaration with name '\w*' was imported already\."
from tests.validation.names.inPipelineFile.other import »Unresolved«


// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
annotation »UniqueAnnotation«
// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
annotation »DuplicateAnnotation«
// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
annotation »DuplicateAnnotation«

// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
class »UniqueClass«
// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
class »DuplicateClass«
// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
class »DuplicateClass«

// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
enum »UniqueEnum«
// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
enum »DuplicateEnum«
// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
enum »DuplicateEnum«

// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
fun »uniqueFunction«()
// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
fun »duplicateFunction«()
// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
fun »duplicateFunction«()

// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
schema »UniqueSchema« {}
// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
schema »DuplicateSchema« {}
// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
schema »DuplicateSchema« {}


// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
pipeline »uniquePipeline« {}
// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
pipeline »duplicatePipeline« {}
// $TEST$ error "A declaration with name 'duplicatePipeline' exists already in this file."
pipeline »duplicatePipeline« {}

// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
segment »uniqueSegment«() {}
// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
segment »duplicateSegment«() {}
// $TEST$ error "A declaration with name 'duplicateSegment' exists already in this file."
segment »duplicateSegment«() {}


// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
annotation »DuplicateDeclaration«
// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
class »DuplicateDeclaration«
// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
enum »DuplicateDeclaration«
// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
fun »DuplicateDeclaration«()
// $TEST$ no error r"A declaration with name '\w*' exists already in this file\."
schema »DuplicateDeclaration« {}
// $TEST$ error r"A declaration with name '\w*' exists already in this file\."
pipeline »DuplicateDeclaration« {}
// $TEST$ error "A declaration with name 'DuplicateDeclaration' exists already in this file."
segment »DuplicateDeclaration«() {}
