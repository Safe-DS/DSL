package tests.scoping.typeParameterBounds.inEnumVariantInNestedEnum

// $TEST$ target container
class MyClass<»Container«> {
    fun myFunction1<BeforeEnum>()

    enum MyEnum {
        MyEnumVariant where {
            // $TEST$ references container
            »Container« sub Int,

            // $TEST$ unresolved
            »BeforeEnum« sub Int,

            // $TEST$ unresolved
            »AfterEnum« sub Int,

            // $TEST$ unresolved
            »NotATypeParameter« sub Int,

            // $TEST$ unresolved
            »Unresolved« sub Int
        }
    }

    fun myFunction2<AfterEnum>()
}

class NotATypeParameter
