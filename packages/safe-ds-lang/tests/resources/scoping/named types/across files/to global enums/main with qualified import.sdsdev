package tests.scoping.namedTypes.acrossFiles.toGlobalEnums

from safeds.scoping.namedTypes.acrossFiles.toGlobalEnums import MyEnum
from tests.scoping.namedTypes.acrossFiles.toGlobalEnums.other import PublicEnumInAnotherPackage, PublicEnumInAnotherPackage2, notANamedTypeDeclaration

segment mySegment(
    // $TEST$ references safeds_MyEnum
    p1: »MyEnum«,


    // $TEST$ references same_PublicEnumInSamePackage
    p2: »PublicEnumInSamePackage«,

    // $TEST$ references same_InternalEnumInSamePackage
    p3: »InternalEnumInSamePackage«,

    // $TEST$ unresolved
    p4: »PrivateEnumInSamePackage«,


    // $TEST$ references safeds_PublicEnumInSafeDsPackage
    p5: »PublicEnumInSafeDsPackage«,

    // $TEST$ unresolved
    p6: »InternalEnumInSafeDsPackage«,

    // $TEST$ unresolved
    p7: »PrivateEnumInSafeDsPackage«,


    // $TEST$ references other_PublicEnumInAnotherPackage
    p8: »PublicEnumInAnotherPackage«,

    // $TEST$ references other_PublicEnumInAnotherPackage2
    p9: »PublicEnumInAnotherPackage2«,

    // $TEST$ unresolved
    p10: »InternalEnumInAnotherPackage«,

    // $TEST$ unresolved
    p11: »PrivateEnumInAnotherPackage«,


    // $TEST$ unresolved
    p12: »PublicEnumWithoutPackage«,

    // $TEST$ unresolved
    p13: »InternalEnumWithoutPackage«,

    // $TEST$ unresolved
    p14: »PrivateEnumWithoutPackage«,


    // $TEST$ unresolved
    p15: »notANamedTypeDeclaration«,
) {}
