package tests.scoping.namedTypes.acrossFiles.toGlobalClasses

from tests.scoping.namedTypes.acrossFiles.toGlobalClasses import MyClass as MyClassInSamePackage
from safeds.scoping.namedTypes.acrossFiles.toGlobalClasses import MyClass as MyClassInSafeDsPackage
from tests.scoping.namedTypes.acrossFiles.toGlobalClasses.other import MyClass as MyClassInAnotherPackage

segment mySegment(
    // $TEST$ references same_MyClass
    p1: »MyClass«,


    // $TEST$ references same_PublicClassInSamePackage
    p2: »PublicClassInSamePackage«,

    // $TEST$ references same_InternalClassInSamePackage
    p3: »InternalClassInSamePackage«,

    // $TEST$ unresolved
    p4: »PrivateClassInSamePackage«,


    // $TEST$ references safeds_PublicClassInSafeDsPackage
    p5: »PublicClassInSafeDsPackage«,

    // $TEST$ unresolved
    p6: »InternalClassInSafeDsPackage«,

    // $TEST$ unresolved
    p7: »PrivateClassInSafeDsPackage«,


    // $TEST$ unresolved
    p8: »PublicClassInAnotherPackage«,

    // $TEST$ unresolved
    p9: »InternalClassInAnotherPackage«,

    // $TEST$ unresolved
    p10: »PrivateClassInAnotherPackage«,


    // $TEST$ unresolved
    p11: »PublicClassWithoutPackage«,

    // $TEST$ unresolved
    p12: »InternalClassWithoutPackage«,

    // $TEST$ unresolved
    p13: »PrivateClassWithoutPackage«,


    // $TEST$ references same_myClass
    p14: »myClassInSamePackage«,

    // $TEST$ references safeds_myClass
    p15: »myClassInSafeDsPackage«,

    // $TEST$ references other_myClass
    p16: »myClassInAnotherPackage«,
) {}
