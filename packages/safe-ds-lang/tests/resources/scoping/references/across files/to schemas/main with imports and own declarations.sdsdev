package tests.scoping.references.acrossFiles.toSchemas

from safeds.scoping.references.acrossFiles.toSchemas import MySchema as MyOwnSchema
from tests.scoping.references.acrossFiles.toSchemas.other import PublicSchemaInAnotherPackage, PublicSchemaInAnotherPackage2

// $TEST$ target own_MyOwnSchema
schema »MyOwnSchema« {}

pipeline myPipeline {
    // $TEST$ references own_MyOwnSchema
    »MyOwnSchema«;


    // $TEST$ references same_PublicSchemaInSamePackage
    »PublicSchemaInSamePackage«;

    // $TEST$ references same_InternalSchemaInSamePackage
    »InternalSchemaInSamePackage«;

    // $TEST$ unresolved
    »PrivateSchemaInSamePackage«;


    // $TEST$ references safeds_PublicSchemaInSafeDsPackage
    »PublicSchemaInSafeDsPackage«;

    // $TEST$ unresolved
    »InternalSchemaInSafeDsPackage«;

    // $TEST$ unresolved
    »PrivateSchemaInSafeDsPackage«;


    // $TEST$ references other_PublicSchemaInAnotherPackage
    »PublicSchemaInAnotherPackage«;

    // $TEST$ references other_PublicSchemaInAnotherPackage2
    »PublicSchemaInAnotherPackage2«;

    // $TEST$ unresolved
    »InternalSchemaInAnotherPackage«;

    // $TEST$ unresolved
    »PrivateSchemaInAnotherPackage«;


    // $TEST$ unresolved
    »PublicSchemaWithoutPackage«;

    // $TEST$ unresolved
    »InternalSchemaWithoutPackage«;

    // $TEST$ unresolved
    »PrivateSchemaWithoutPackage«;
}
