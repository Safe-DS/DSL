package tests.scoping.references.acrossFiles.toTypeAliases

from tests.scoping.references.acrossFiles.toTypeAliases import MyAlias as MyAliasInSamePackage
from safeds.scoping.references.acrossFiles.toTypeAliases import MyAlias as MyAliasInSafeDsPackage
from tests.scoping.references.acrossFiles.toTypeAliases.other import MyAlias as MyAliasInAnotherPackage

pipeline myPipeline {
    // $TEST$ references same_MyAlias
    »MyAlias«;


    // $TEST$ references same_PublicAliasInSamePackage
    »PublicAliasInSamePackage«;

    // $TEST$ references same_InternalAliasInSamePackage
    »InternalAliasInSamePackage«;

    // $TEST$ unresolved
    »PrivateAliasInSamePackage«;


    // $TEST$ references safeds_PublicAliasInSafeDsPackage
    »PublicAliasInSafeDsPackage«;

    // $TEST$ unresolved
    »InternalAliasInSafeDsPackage«;

    // $TEST$ unresolved
    »PrivateAliasInSafeDsPackage«;


    // $TEST$ unresolved
    »PublicAliasInAnotherPackage«;

    // $TEST$ unresolved
    »InternalAliasInAnotherPackage«;

    // $TEST$ unresolved
    »PrivateAliasInAnotherPackage«;


    // $TEST$ unresolved
    »PublicAliasWithoutPackage«;

    // $TEST$ unresolved
    »InternalAliasWithoutPackage«;

    // $TEST$ unresolved
    »PrivateAliasWithoutPackage«;


    // $TEST$ references same_MyAlias
    »MyAliasInSamePackage«;

    // $TEST$ references safeds_MyAlias
    »MyAliasInSafeDsPackage«;

    // $TEST$ references other_MyAlias
    »MyAliasInAnotherPackage«;
}
