package tests.typing.lowestCommonSupertype.enumTypeAndTypeParameterType

enum E {
    V
}

enum F

class Test<
    Unbounded,
    BoundedByEnum sub E,
    BoundedByEnumVariant sub E.V,
    BoundedByOtherEnum sub F,
    BoundedByOtherEnumOrNull sub F?
>(
    e: E,

    unbounded: Unbounded,
    unboundedOrNull: Unbounded?,
    boundedByEnum: BoundedByEnum,
    boundedByEnumVariant: BoundedByEnumVariant,
    boundedByOtherEnum: BoundedByOtherEnum,
    boundedByOtherEnumOrNull: BoundedByOtherEnumOrNull,

    // $TEST$ serialization List<Any?>
    p1: Any = »[e, unbounded]«,
    // $TEST$ serialization List<Any?>
    p2: Any = »[e, unboundedOrNull]«,
    // $TEST$ serialization List<E>
    p3: Any = »[e, boundedByEnum]«,
    // $TEST$ serialization List<E>
    p4: Any = »[e, boundedByEnumVariant]«,
    // $TEST$ serialization List<Any>
    p5: Any = »[e, boundedByOtherEnum]«,
    // $TEST$ serialization List<Any?>
    p6: Any = »[e, boundedByOtherEnumOrNull]«,
)
