package tests.validation.types.checking.indexedAccessReceiver

class MyList sub List<Int>
class MyMap sub Map<String, Int>

segment mySegment(
    listOrNull: List<Int>?,
    mapOrNull: Map<String, Int>?,
    intOrNull: Int?,

    myList: MyList,
    myMap: MyMap,
) {
    // $TEST$ no error r"Indexed access is not defined for type .*\."
    »[1]«[0];
    // $TEST$ no error r"Indexed access is not defined for type .*\."
    »{0: 1}«[0];
    // $TEST$ error "Indexed access is not defined for type 'literal<1>'."
    »1«[0];

    // $TEST$ no error r"Indexed access is not defined for type .*\."
    »listOrNull«[0];
    // $TEST$ no error r"Indexed access is not defined for type .*\."
    »mapOrNull«[""];
    // $TEST$ error "Indexed access is not defined for type 'Int?'."
    »intOrNull«[0];

    // $TEST$ no error r"Indexed access is not defined for type .*\."
    »myList«[0];
    // $TEST$ no error r"Indexed access is not defined for type .*\."
    »myMap«[""];
    // $TEST$ error "Indexed access is not defined for type 'unknown'."
    »unresolved«[0];
}

// Strict checking of type parameter types
class MyClass<T sub Any>(
    p1: T,

    // $TEST$ error "Indexed access is not defined for type 'T'."
    p2: Any? = »p1«[0],
)
