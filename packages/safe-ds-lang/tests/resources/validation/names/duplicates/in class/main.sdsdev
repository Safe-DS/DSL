package tests.validation.names.duplicates.inClass

class MyClass1<
    // $TEST$ no error r"A type parameter or parameter with name '\w*' exists already\."
    »DuplicateTypeParameter«,
    // $TEST$ error "A type parameter or parameter with name 'DuplicateTypeParameter' exists already."
    »DuplicateTypeParameter«,
    // $TEST$ no error r"A type parameter or parameter with name '\w*' exists already\."
    »UniqueTypeParameter«,
    // $TEST$ no error r"A type parameter or parameter with name '\w*' exists already\."
    »TypeParameterAndParameter«,
>(
    // $TEST$ no error r"A type parameter or parameter with name '\w*' exists already\."
    »duplicateParameter«: Int,
    // $TEST$ error "A type parameter or parameter with name 'duplicateParameter' exists already."
    »duplicateParameter«: Int,
    // $TEST$ no error r"A type parameter or parameter with name '\w*' exists already\."
    »uniqueParameter«: Int,
    // $TEST$ error "A type parameter or parameter with name 'TypeParameterAndParameter' exists already."
    »TypeParameterAndParameter«: Int,
) {
	// $TEST$ no error r"A class member with name '\w*' exists already\."
    attr »duplicateInstanceAttribute«: Int
    // $TEST$ error "A class member with name 'duplicateInstanceAttribute' exists already."
    attr »duplicateInstanceAttribute«: Int
	// $TEST$ no error r"A class member with name '\w*' exists already\."
    attr »uniqueInstanceAttribute«: Int

	// $TEST$ no error r"A class member with name '\w*' exists already\."
    static attr »duplicateStaticAttribute«: Int
    // $TEST$ error "A class member with name 'duplicateStaticAttribute' exists already."
    static attr »duplicateStaticAttribute«: Int
	// $TEST$ no error r"A class member with name '\w*' exists already\."
    static attr »uniqueStaticAttribute«: Int

    // $TEST$ no error r"A class member with name '\w*' exists already\."
    class »DuplicateClass«
    // $TEST$ error "A class member with name 'DuplicateClass' exists already."
    class »DuplicateClass«
    // $TEST$ no error r"A class member with name '\w*' exists already\."
    class »UniqueClass«

    // $TEST$ no error r"A class member with name '\w*' exists already\."
    enum »DuplicateEnum«
    // $TEST$ error "A class member with name 'DuplicateEnum' exists already."
    enum »DuplicateEnum«
    // $TEST$ no error r"A class member with name '\w*' exists already\."
    enum »UniqueEnum«

    // $TEST$ no error r"A class member with name '\w*' exists already\."
    fun »duplicateInstanceMethod«()
    // $TEST$ error "A class member with name 'duplicateInstanceMethod' exists already."
    fun »duplicateInstanceMethod«()
    // $TEST$ no error r"A class member with name '\w*' exists already\."
    fun »uniqueInstanceMethod«()

    // $TEST$ no error r"A class member with name '\w*' exists already\."
    static fun »duplicateStaticMethod«()
    // $TEST$ error "A class member with name 'duplicateStaticMethod' exists already."
    static fun »duplicateStaticMethod«()
    // $TEST$ no error r"A class member with name '\w*' exists already\."
    static fun »uniqueStaticMethod«()

    // $TEST$ no error r"A class member with name '\w*' exists already\."
    attr »duplicateMember«: Int

    // $TEST$ error "A class member with name 'duplicateMember' exists already."
    attr »duplicateMember«: Int
    // $TEST$ error "A class member with name 'duplicateMember' exists already."
    fun »duplicateMember«()

    // $TEST$ error "A class member with name 'duplicateMember' exists already."
    static attr »duplicateMember«: Int
    // $TEST$ error "A class member with name 'duplicateMember' exists already."
    class »duplicateMember«
    // $TEST$ error "A class member with name 'duplicateMember' exists already."
    enum »duplicateMember«
    // $TEST$ error "A class member with name 'duplicateMember' exists already."
    static fun »duplicateMember«()
}

class MyClass2<
    // $TEST$ no error r"A type parameter or parameter with name '\w*' exists already\."
    »TypeParameterAndMember«,
>(
    // $TEST$ no error r"A type parameter or parameter with name '\w*' exists already\."
    »parameterAndMember«: Int,
) {
	// $TEST$ no error r"A.*member with name '\w*' exists already\."
    attr »TypeParameterAndMember«: Int

    // $TEST$ no error r"A.*member with name '\w*' exists already\."
    attr »parameterAndMember«: Int
}

class MyClass4<
    // $TEST$ no error r"A type parameter or parameter with name '\w*' exists already\."
    »TypeParameterAndMember«,
>(
    // $TEST$ no error r"A type parameter or parameter with name '\w*' exists already\."
    »parameterAndMember«: Int,
) {
	// $TEST$ no error r"A.*member with name '\w*' exists already\."
    class »TypeParameterAndMember«

    // $TEST$ no error r"A.*member with name '\w*' exists already\."
    class »parameterAndMember«
}


class MyClass5<
    // $TEST$ no error r"A type parameter or parameter with name '\w*' exists already\."
    »TypeParameterAndMember«,
>(
    // $TEST$ no error r"A type parameter or parameter with name '\w*' exists already\."
    »parameterAndMember«: Int,
) {
	// $TEST$ no error r"A.*member with name '\w*' exists already\."
    enum »TypeParameterAndMember«

    // $TEST$ no error r"A.*member with name '\w*' exists already\."
    enum »parameterAndMember«
}

class MyClass6<
    // $TEST$ no error r"A type parameter or parameter with name '\w*' exists already\."
    »TypeParameterAndMember«,
>(
    // $TEST$ no error r"A type parameter or parameter with name '\w*' exists already\."
    »parameterAndMember«: Int,
) {
	// $TEST$ no error r"A.*member with name '\w*' exists already\."
    @Pure fun »TypeParameterAndMember«()

    // $TEST$ no error r"A.*member with name '\w*' exists already\."
    @Pure fun »parameterAndMember«()
}

class MyClass7<
    // $TEST$ no error r"A type parameter or parameter with name '\w*' exists already\."
    »TypeParameterAndMember«,
>(
    // $TEST$ no error r"A type parameter or parameter with name '\w*' exists already\."
    »parameterAndMember«: Int,
) {
	// $TEST$ no error r"A.*member with name '\w*' exists already\."
    @Pure static fun »TypeParameterAndMember«()

    // $TEST$ no error r"A.*member with name '\w*' exists already\."
    @Pure static fun »parameterAndMember«()
}

class MyClass8 {
    // $TEST$ no error r"A.*member with name '\w*' exists already\."
    attr »instanceAndStaticMember«: Int
    // $TEST$ error "A class member with name 'instanceAndStaticMember' exists already."
    static attr »instanceAndStaticMember«: Int

    // $TEST$ no error "r"A.*member with name '\w*' exists already\."
    static attr »staticAndInstanceMember«: Int
    // $TEST$ error "A class member with name 'staticAndInstanceMember' exists already."
    attr »staticAndInstanceMember«: Int
}

class MyClass9 {
    // $TEST$ no error r"A.*member with name '\w*' exists already\."
    attr »instanceAndStaticMember«: Int
    // $TEST$ error "A class member with name 'instanceAndStaticMember' exists already."
    class »instanceAndStaticMember«

    // $TEST$ no error "r"A.*member with name '\w*' exists already\."
    class »staticAndInstanceMember«
    // $TEST$ error "A class member with name 'staticAndInstanceMember' exists already."
    attr »staticAndInstanceMember«: Int
}
class MyClass10 {
    // $TEST$ no error r"A.*member with name '\w*' exists already\."
    attr »instanceAndStaticMember«: Int
    // $TEST$ error "A class member with name 'instanceAndStaticMember' exists already."
    enum »instanceAndStaticMember«

    // $TEST$ no error "r"A.*member with name '\w*' exists already\."
    enum »staticAndInstanceMember«
    // $TEST$ error "A class member with name 'staticAndInstanceMember' exists already."
    attr »staticAndInstanceMember«: Int
}

class MyClass11 {
    // $TEST$ no error r"A.*member with name '\w*' exists already\."
    attr »instanceAndStaticMember«: Int
    // $TEST$ error "A class member with name 'instanceAndStaticMember' exists already."
    @Pure static fun »instanceAndStaticMember«()

    // $TEST$ no error "r"A.*member with name '\w*' exists already\."
    @Pure static fun »staticAndInstanceMember«()
    // $TEST$ error "A class member with name 'staticAndInstanceMember' exists already."
    attr »staticAndInstanceMember«: Int
}

class MyClass12 {
    // $TEST$ no error r"A.*member with name '\w*' exists already\."
    @Pure fun»instanceAndStaticMember«()
    // $TEST$ error "A class member with name 'instanceAndStaticMember' exists already."
    static attr »instanceAndStaticMember«: Int

    // $TEST$ no error "r"A.*member with name '\w*' exists already\."
    static attr »staticAndInstanceMember«: Int
    // $TEST$ error "A class member with name 'staticAndInstanceMember' exists already."
    @Pure fun»staticAndInstanceMember«()
}

class MyClass13 {
    // $TEST$ no error r"A.*member with name '\w*' exists already\."
    @Pure fun»instanceAndStaticMember«()
    // $TEST$ error "A class member with name 'instanceAndStaticMember' exists already."
    class »instanceAndStaticMember«

    // $TEST$ no error "r"A.*member with name '\w*' exists already\."
    class »staticAndInstanceMember«
    // $TEST$ error "A class member with name 'staticAndInstanceMember' exists already."
    @Pure fun»staticAndInstanceMember«()
}
class MyClass14 {
    // $TEST$ no error r"A.*member with name '\w*' exists already\."
    @Pure fun»instanceAndStaticMember«()
    // $TEST$ error "A class member with name 'instanceAndStaticMember' exists already."
    enum »instanceAndStaticMember«

    // $TEST$ no error "r"A.*member with name '\w*' exists already\."
    enum »staticAndInstanceMember«
    // $TEST$ error "A class member with name 'staticAndInstanceMember' exists already."
    @Pure fun»staticAndInstanceMember«()
}

class MyClass15 {
    // $TEST$ no error r"A.*member with name '\w*' exists already\."
    @Pure fun»instanceAndStaticMember«()
    // $TEST$ error "A class member with name 'instanceAndStaticMember' exists already."
    @Pure static fun »instanceAndStaticMember«()

    // $TEST$ no error "r"A.*member with name '\w*' exists already\."
    @Pure static fun »staticAndInstanceMember«()
    // $TEST$ error "A class member with name 'staticAndInstanceMember' exists already."
    @Pure fun»staticAndInstanceMember«()
}
