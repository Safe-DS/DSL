package tests.validation.builtins.pythonCall

class MyClass {
    // $TEST$ no error r"The template expressions? .* cannot be interpreted."
    @»PythonCall«("myMethod1($param)")
    fun myMethod1(param: Int)

    // $TEST$ no error r"The template expressions? .* cannot be interpreted."
    @»PythonCall«("myMethod2($this)")
    fun myMethod2(this: Int)

    // $TEST$ no error "The template expression '$this' cannot be interpreted."
    @»PythonCall«("myMethod3($this)")
    fun myMethod3()

    // $TEST$ error "The template expressions '$param1', '$param2' cannot be interpreted."
    @»PythonCall«("myMethod4($param1, $param2)")
    fun myMethod4()
}

// $TEST$ no error r"The template expressions? .* cannot be interpreted."
@»PythonCall«("myFunction1($param)")
fun myFunction1(param: Int)

// $TEST$ no error r"The template expressions? .* cannot be interpreted."
@»PythonCall«("myFunction2($this)")
fun myFunction2(this: Int)

// $TEST$ error "The template expression '$this' cannot be interpreted."
@»PythonCall«("myFunction3($this)")
fun myFunction3()

// $TEST$ error "The template expressions '$param1', '$param2' cannot be interpreted."
@»PythonCall«("myFunction4($param1, $param2)")
fun myFunction4()

// $TEST$ no error "An expert parameter must be optional."
@»PythonCall«("$this")
annotation MyAnnotation()
