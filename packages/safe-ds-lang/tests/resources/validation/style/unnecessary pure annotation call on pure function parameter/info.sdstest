package tests.validation.style.unnecessaryPureAnnotationCallOnPureFunctionParameter

fun functionWithUnknownPurity(
    // $TEST$ no info "Callable parameters of a pure function are always pure, so this annotation call can be removed."
    »@Pure« p1: Int,
    // $TEST$ no info "Callable parameters of a pure function are always pure, so this annotation call can be removed."
    »@Pure« p2: () -> (),
)

@Pure
fun pureFunction(
    // $TEST$ no info "Callable parameters of a pure function are always pure, so this annotation call can be removed."
    »@Pure« p1: Int,
    // $TEST$ info "Callable parameters of a pure function are always pure, so this annotation call can be removed."
    »@Pure« p2: () -> (),
)

@Impure([])
fun impureFunction(
    // $TEST$ no info "Callable parameters of a pure function are always pure, so this annotation call can be removed."
    »@Pure« p1: Int,
    // $TEST$ no info "Callable parameters of a pure function are always pure, so this annotation call can be removed."
    »@Pure« p2: () -> (),
)

@Pure
@Impure([])
fun pureAndImpureFunction(
    // $TEST$ no info "Callable parameters of a pure function are always pure, so this annotation call can be removed."
    »@Pure« p1: Int,
    // $TEST$ no info "Callable parameters of a pure function are always pure, so this annotation call can be removed."
    »@Pure« p2: () -> (),
)
