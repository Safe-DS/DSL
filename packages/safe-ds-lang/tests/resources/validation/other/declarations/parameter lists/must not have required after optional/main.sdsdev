package tests.validation.other.declarations.parameterLists.mustNotHaveRequiredAfterOptional

// $TEST$ no error "After the first optional parameter all parameters must be optional."
// $TEST$ no error "After the first optional parameter all parameters must be optional."
// $TEST$ error "After the first optional parameter all parameters must be optional."
// $TEST$ no error "After the first optional parameter all parameters must be optional."
annotation MyAnnotation1(»a«: Int, »b«: Int = 1, »c«: Int, »d«: Int = 2)

// $TEST$ no error "After the first optional parameter all parameters must be optional."
// $TEST$ no error "After the first optional parameter all parameters must be optional."
annotation MyAnnotation2(»a«: Int, »b«: Int = 1)

// $TEST$ no error "After the first optional parameter all parameters must be optional."
annotation MyAnnotation3(»a«: Int)


// $TEST$ no error "After the first optional parameter all parameters must be optional."
// $TEST$ no error "After the first optional parameter all parameters must be optional."
// $TEST$ error "After the first optional parameter all parameters must be optional."
// $TEST$ no error "After the first optional parameter all parameters must be optional."
class MyClass1(»a«: Int, »b«: Int = 1, »c«: Int, »d«: Int = 2)

// $TEST$ no error "After the first optional parameter all parameters must be optional."
// $TEST$ no error "After the first optional parameter all parameters must be optional."
class MyClass2(»a«: Int, »b«: Int = 1)

// $TEST$ no error "After the first optional parameter all parameters must be optional."
class MyClass3(»a«: Int)


enum MyEnum {
    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    // $TEST$ error "After the first optional parameter all parameters must be optional."
    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    MyEnumVariant1(»a«: Int, »b«: Int = 1, »c«: Int, »d«: Int = 2)

    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    MyEnumVariant2(»a«: Int, »b«: Int = 1)

    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    MyEnumVariant3(»a«: Int)
}


// $TEST$ no error "After the first optional parameter all parameters must be optional."
// $TEST$ no error "After the first optional parameter all parameters must be optional."
// $TEST$ error "After the first optional parameter all parameters must be optional."
// $TEST$ no error "After the first optional parameter all parameters must be optional."
fun myFunction1(»a«: Int, »b«: Int = 1, »c«: Int, »d«: Int = 2)

// $TEST$ no error "After the first optional parameter all parameters must be optional."
// $TEST$ no error "After the first optional parameter all parameters must be optional."
fun myFunction2(»a«: Int, »b«: Int = 1)

// $TEST$ no error "After the first optional parameter all parameters must be optional."
fun myFunction3(»a«: Int)


// $TEST$ no error "After the first optional parameter all parameters must be optional."
// $TEST$ no error "After the first optional parameter all parameters must be optional."
// $TEST$ error "After the first optional parameter all parameters must be optional."
// $TEST$ no error "After the first optional parameter all parameters must be optional."
segment mySegment1(»a«: Int, »b«: Int = 1, »c«: Int, »d«: Int = 2) {}

// $TEST$ no error "After the first optional parameter all parameters must be optional."
// $TEST$ no error "After the first optional parameter all parameters must be optional."
segment mySegment2(»a«: Int, »b«: Int = 1) {}

// $TEST$ no error "After the first optional parameter all parameters must be optional."
segment mySegment3(»a«: Int) {}


pipeline myPipeline {
    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    // $TEST$ error "After the first optional parameter all parameters must be optional."
    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    (»a«: Int, »b«: Int = 1, »c«: Int, »d«: Int = 2) {};

    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    (»a«: Int, »b«: Int = 1) {};

    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    (»a«: Int) {};


    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    // $TEST$ error "After the first optional parameter all parameters must be optional."
    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    (»a«: Int, »b«: Int = 1, »c«: Int, »d«: Int = 2) -> 1;

    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    (»a«: Int, »b«: Int = 1) -> 1;

    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    (»a«: Int) -> 1;
}


fun myFunction4(
    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    // $TEST$ error "After the first optional parameter all parameters must be optional."
    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    p1: (»a«: Int, »b«: Int = 1, »c«: Int, »d«: Int = 2) -> (),

    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    p2: (»a«: Int, »b«: Int = 1) -> (),

    // $TEST$ no error "After the first optional parameter all parameters must be optional."
    p3: (»a«: Int) -> (),
)
