{"version":3,"sources":["input.sdstest"],"names":["f1","l","h","f2","e1","d1","test","a","b","d","g","e"],"mappings":"AAAA;;AAMA,IAAQA,EAAE,CAACC,CAAC;IACRC,CAAC,CAACD,CAAC,CAAC,CAAC,EAAE,CAAC;;AAGZ,IAAQE,EAAE,CAACF,CAAC;IACRC,CAAC,CAACD,CAAC,CAAC,CAAC,EAAE,CAAC,EAAEG,CAAE;IACZF,CAAC,CAACD,CAAC,CAAC,CAAC,EAAE,CAAC,EAAEI,CAAE;;;;AAGhB,IAASC,IAAI;IAEN,yBAACC,CAAC,EAAOC,CAAC;QACT,0BAAMC,CAAC,GAAGC,CAAC;QADZ,OACC,0BAAMD,CAAC;IADXT,EAAE,CAAC;IAGA,yBAACO,CAAC,EAAOC,CAAC;QACT,0BAAMC,CAAC,GAAGC,CAAC;QACX,0BAAMC,CAAC,GAAGD,CAAC;QAFZ,OACC,0BAAMD,CAAC,EACP,0BAAME,CAAC;IAFXR,EAAE,CAAC","file":"gen_input.py","sourcesContent":["package tests.generator.blockLambdaResult\r\n\r\nfun g() -> a: Int\r\n\r\nfun h(a: Int)\r\n\r\nsegment f1(l: (a: Int, b: Int) -> d: Int) {\r\n    h(l(1, 2).d);\r\n}\r\n\r\nsegment f2(l: (a: Int, b: Int) -> (d1: Int, e1: Int)) {\r\n    h(l(1, 2).e1);\r\n    h(l(1, 2).d1);\r\n}\r\n\r\npipeline test {\r\n\r\n    f1((a: Int, b: Int) {\r\n        yield d = g();\r\n    });\r\n    f2((a: Int, b: Int) {\r\n        yield d = g();\r\n        yield e = g();\r\n    });\r\n\r\n}\r\n"]}