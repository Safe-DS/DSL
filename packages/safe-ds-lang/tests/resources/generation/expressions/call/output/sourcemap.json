{"version":3,"sources":["input.sdstest"],"names":["test","f","g","param2","h"],"mappings":"AAAA;;AAuBA,IAASA,IAAI;IACTC,CAAC,CAAEC,CAAC,CAAC,CAAC,EAlBNC,MAAM,CAkBE,CAAC;IACTF,CAAC,CAAEC,CAAC,CAAsB,CAAC,EAnB3BC,MAAM,CAmBQ,CAAC;IACfF,CAAC,CAAEG,CAAC,CAAC,CAAC,EAfiBD,OAAM,CAerB,CAAC;IACTF,CAAC,CAAEG,CAAC,CAAsB,CAAC,EAhBJD,OAAM,CAgBf,CAAC;IACb,KAAK;IACL,KAAK,GAAE,GAAG;IACZ,EAAQ,GAAG,EAAT,IAAI","file":"gen_input.py","sourcesContent":["package tests.generator.call\r\n\r\nfun f(param: Any?)\r\n\r\nfun g(\r\n    param1: Int,\r\n    param2: Int = 0\r\n) -> result: Boolean\r\n\r\nfun h(\r\n    @PythonName(\"param_1\") param1: Int,\r\n    @PythonName(\"param_2\") param2: Int = 0\r\n) -> result: Boolean\r\n\r\n@PythonCall(\"$param.i()\")\r\nfun i(param: Any?)\r\n\r\n@PythonCall(\"$param.j($param2)\")\r\nfun j(param: Any?, param2: Any?)\r\n\r\n@PythonCall(\"k($param2, $param)\")\r\nfun k(param: Any?, param2: Any?)\r\n\r\npipeline test {\r\n    f((g(1, 2)));\r\n    f((g(param2 = 1, param1 = 2)));\r\n    f((h(1, 2)));\r\n    f((h(param2 = 1, param1 = 2)));\r\n    i(\"abc\");\r\n    j(\"abc\", 123);\r\n    k(1.23, 456);\r\n}\r\n"]}