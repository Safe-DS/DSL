package tests.generator.call

@Impure([ImpurityReason.Other]) fun f(param: Any?)

@Pure fun g(
    param1: Int,
    param2: Int = 0
) -> result: Boolean

@Pure fun h(
    @PythonName("param_1") param1: Int,
    @PythonName("param_2") param2: Int = 0
) -> result: Boolean

@Impure([ImpurityReason.Other])
@PythonCall("$param.i()")
fun i(param: Any?)

@Impure([ImpurityReason.Other])
@PythonCall("$param.j($param2)")
fun j(param: Any?, param2: Any?)

@Impure([ImpurityReason.Other])
@PythonCall("k($param2, $param)")
fun k(param: Any?, param2: Any?)

pipeline test {
    f((g(1, 2)));
    f((g(param2 = 1, param1 = 2)));
    f((h(1, 2)));
    f((h(param2 = 1, param1 = 2)));
    f((h(param1 = 2)));
    i("abc");
    j("abc", 123);
    k(1.23, 456);
}
