package safeds.ml.classical.regression

from safeds.data.tabular.containers import Table, TaggedTable
from safeds.ml.classical.regression import Regressor

/**
 * K-nearest-neighbors regression.
 *
 * @param numberOfNeighbors The number of neighbors to use for interpolation. Has to be greater than 0 (validated in the constructor) and
 * less than or equal to the sample size (validated when calling `fit`).
 *
 * @example
 * pipeline example {
 *     // TODO
 * }
 */
class KNearestNeighborsRegressor(
    @PythonName("number_of_neighbors") const numberOfNeighbors: Int
) sub Regressor where {
    numberOfNeighbors >= 1
} {
    /**
     * Get the number of neighbors used for interpolation.
     *
     * @example
     * pipeline example {
     *     // TODO
     * }
     */
    @PythonName("number_of_neighbors") attr numberOfNeighbors: Int

    /**
     * Create a copy of this regressor and fit it with the given training data.
     *
     * This regressor is not modified.
     *
     * @param trainingSet The training data containing the feature and target vectors.
     *
     * @result fittedRegressor The fitted regressor.
     *
     * @example
     * pipeline example {
     *     // TODO
     * }
     */
    @Pure
    fun fit(
        @PythonName("training_set") trainingSet: TaggedTable
    ) -> fittedRegressor: KNearestNeighborsRegressor
}
