package safeds.typing

// Literals
typealias NumericLiteral = union<Int, Float>
// typealias TemporalLiteral = datetime.date | datetime.time | datetime.datetime | datetime.timedelta
typealias AnyLiteral = union<NumericLiteral, Boolean, String> // bytes | TemporalLiteral

// Convertible to cell (we cannot restrict `Cell`, because `Row.getCell` returns a `Cell<Any?>`)
typealias ConvertibleToCell = union<AnyLiteral, Cell, Nothing?>
typealias ConvertibleToBooleanCell = union<Boolean, Cell, Nothing?>
typealias ConvertibleToIntCell = union<Int, Cell, Nothing?>
typealias ConvertibleToStringCell = union<String, Cell, Nothing?>
