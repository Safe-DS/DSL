package safeds.data.tabular.transformation

from safeds.data.tabular.containers import Table
from safeds.data.tabular.transformation import TableTransformer

/**
 * The KNearestNeighborsImputer replaces missing values in given Columns with the mean value of the K-nearest neighbors.
 *
 * @param neighborCount The number of neighbors to consider when imputing missing values.
 * @param selector The list of columns used to impute missing values. If 'None', all columns are used.
 * @param valueToReplace The placeholder for the missing values. All occurrences of`missing_values` will be imputed.
 */
class KNearestNeighborsImputer(
    @PythonName("neighbor_count") neighborCount: Int,
    selector: union<List<String>, String, Nothing?> = null,
    @PythonName("value_to_replace") valueToReplace: union<Float, String, Nothing?> = null
) sub TableTransformer {
    /**
     * The number of neighbors to consider when imputing missing values.
     */
    @PythonName("neighbor_count") attr neighborCount: Int
    /**
     * The value to replace.
     */
    @PythonName("value_to_replace") attr valueToReplace: Any?

    /**
     * Learn a transformation for a set of columns in a table.
     *
     * **Note:** This transformer is not modified.
     *
     * @param table The table used to fit the transformer.
     *
     * @result fittedTransformer The fitted transformer.
     */
    @Pure
    @Category(DataScienceCategory.DataProcessingQTransformer)
    fun fit(
        table: Table
    ) -> fittedTransformer: KNearestNeighborsImputer

    /**
     * Learn a transformation for a set of columns in a table and apply the learned transformation to the same table.
     *
     * **Note:** Neither this transformer nor the given table are modified.
     *
     * @param table The table used to fit the transformer. The transformer is then applied to this table.
     *
     * @result fittedTransformer The fitted transformer.
     * @result transformedTable The transformed table.
     */
    @Pure
    @PythonName("fit_and_transform")
    @Category(DataScienceCategory.DataProcessingQTransformer)
    fun fitAndTransform(
        table: Table
    ) -> (fittedTransformer: KNearestNeighborsImputer, transformedTable: Table)
}
