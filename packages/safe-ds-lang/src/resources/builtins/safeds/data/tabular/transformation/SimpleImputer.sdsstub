package safeds.data.tabular.transformation

from safeds.data.tabular.containers import Table
from safeds.data.tabular.transformation import TableTransformer

/**
 * Replace missing values with the given strategy.
 *
 * @param strategy The strategy used to impute missing values.
 * @param columnNames The list of columns used to fit the transformer. If `None`, all columns are used.
 * @param valueToReplace The value that should be replaced.
 *
 * @example
 * pipeline example {
 *    val table = Table({"a": [1, null], "b": [3, 4]});
 *    val imputer = SimpleImputer(SimpleImputer.Strategy.Mean, columnNames = "a").fit(table);
 *    val transformedTable = imputer.transform(table);
 *    // Table({"a": [1, 1], "b": [3, 4]})
 * }
 *
* @example
 * pipeline example {
 *    val table = Table({"a": [1, null], "b": [3, 4]});
 *    val imputer = SimpleImputer(SimpleImputer.Strategy.Constant(0), columnNames = "a").fit(table);
 *    val transformedTable = imputer.transform(table);
 *    // Table({"a": [1, 0], "b": [3, 4]})
 * }
 */
class SimpleImputer(
    strategy: SimpleImputer.Strategy,
    @PythonName("column_names") columnNames: union<List<String>, String, Nothing?> = null,
    @PythonName("value_to_replace") valueToReplace: union<Float, String, Nothing?> = null
) sub TableTransformer {
    /**
     * Various strategies to replace missing values.
     */
    enum Strategy {
        /**
         * Replace missing values with the given constant value.
         *
         * @param value The value to replace missing values.
         */
        @PythonName("constant")
        Constant(value: Any)

        /**
         * Replace missing values with the mean of each column.
         */
        @PythonName("mean")
        Mean

        /**
         * Replace missing values with the median of each column.
         */
        @PythonName("median")
        Median

        /**
         * Replace missing values with the mode of each column.
         */
        @PythonName("mode")
        Mode
    }

    /**
     * The strategy used to replace missing values.
     */
    attr strategy: SimpleImputer.Strategy
    /**
     * The value that should be replaced.
     */
    @PythonName("value_to_replace") attr valueToReplace: Any

    /**
     * Learn a transformation for a set of columns in a table.
     *
     * This transformer is not modified.
     *
     * @param table The table used to fit the transformer.
     *
     * @result fittedTransformer The fitted transformer.
     */
    @Pure
    fun fit(
        table: Table
    ) -> fittedTransformer: SimpleImputer

    /**
     * Learn a transformation for a set of columns in a table and apply the learned transformation to the same table.
     *
     * **Note:** Neither this transformer nor the given table are modified.
     *
     * @param table The table used to fit the transformer. The transformer is then applied to this table.
     *
     * @result fittedTransformer The fitted transformer.
     * @result transformedTable The transformed table.
     */
    @Pure
    @PythonName("fit_and_transform")
    fun fitAndTransform(
        table: Table
    ) -> (fittedTransformer: SimpleImputer, transformedTable: Table)
}
