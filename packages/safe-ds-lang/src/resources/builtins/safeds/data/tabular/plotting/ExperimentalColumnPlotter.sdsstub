package safeds.data.tabular.plotting

from safeds.data.image.containers import Image

/**
 * A class that contains plotting methods for a column.
 *
 * @param column The column to plot.
 *
 * @example
 * pipeline example {
 *     // from safeds.data.tabular.containers import ExperimentalColumn
 *     // column = ExperimentalColumn("test", [1, 2, 3])
 *     // plotter = column.plot
 * }
 */
@Experimental
class ExperimentalColumnPlotter(
    column: ExperimentalColumn<Any>
) {
    /**
     * Create a box plot for the values in the column. This is only possible for numeric columns.
     *
     * @result boxPlot The box plot as an image.
     *
     * @example
     * pipeline example {
     *     // from safeds.data.tabular.containers import ExperimentalColumn
     *     // column = ExperimentalColumn("test", [1, 2, 3])
     *     // boxplot = column.plot.box_plot()
     * }
     */
    @Pure
    @PythonName("box_plot")
    fun boxPlot() -> boxPlot: Image

    /**
     * Create a histogram for the values in the column.
     *
     * @param numberOfBins The number of bins to use in the histogram. Default is 10.
     *
     * @result histogram The plot as an image.
     *
     * @example
     * pipeline example {
     *     // from safeds.data.tabular.containers import ExperimentalColumn
     *     // column = ExperimentalColumn("test", [1, 2, 3])
     *     // histogram = column.plot.histogram()
     * }
     */
    @Pure
    fun histogram(
        @PythonName("number_of_bins") numberOfBins: Int = 10
    ) -> histogram: Image

    /**
     * Create a lag plot for the values in the column.
     *
     * @param lag The amount of lag.
     *
     * @result lagPlot The plot as an image.
     *
     * @example
     * pipeline example {
     *     // from safeds.data.tabular.containers import ExperimentalColumn
     *     // column = ExperimentalColumn("values", [1, 2, 3, 4])
     *     // image = column.plot.lag_plot(2)
     * }
     */
    @Pure
    @PythonName("lag_plot")
    fun lagPlot(
        lag: Int
    ) -> lagPlot: Image
}
