package safeds.data.tabular.transformation

from safeds.data.tabular.containers import Table
from safeds.data.tabular.transformation import InvertibleTableTransformer

/**
 * The LabelEncoder encodes one or more given columns into labels.
 *
 * @example
 * pipeline example {
 *    val table = Table({"a": ["z", "y"], "b": [3, 4]});
 *    val encoder = LabelEncoder().fit(table, ["a"]);
 *    val transformedTable = encoder.transform(table);
 *    // Table({"a": [1, 0], "b": [3, 4]})
 *    val originalTable = encoder.inverseTransform(transformedTable);
 *    // Table({"a": ["z", "y"], "b": [3, 4]})
 * }
 */
class LabelEncoder() sub InvertibleTableTransformer {
    /**
     * Learn a transformation for a set of columns in a table.
     *
     * This transformer is not modified.
     *
     * @param table The table used to fit the transformer.
     * @param columnNames The list of columns from the table used to fit the transformer. If `None`, all columns are used.
     *
     * @result result1 The fitted transformer.
     */
    @Pure
    fun fit(
        table: Table,
        @PythonName("column_names") columnNames: List<String>?
    ) -> result1: LabelEncoder
}
