package safeds.data.tabular.transformation

from safeds.data.tabular.containers import ExperimentalTable
from safeds.data.tabular.transformation import ExperimentalTableTransformer

/**
 * Replace missing values using the given strategy.
 *
 * @param strategy How to replace missing values.
 * @param valueToReplace The value that should be replaced.
 *
 * @example
 * pipeline example {
 *     // from safeds.data.tabular.containers import Column, Table
 *     // from safeds.data.tabular.transformation import Imputer
 *     //
 *     // table = Table.from_columns(
 *     //     [
 *     //         Column("a", [1, 3, None]),
 *     //         Column("b", [None, 2, 3]),
 *     //     ],
 *     // )
 *     // transformer = Imputer(Imputer.Strategy.Constant(0))
 *     // transformed_table = transformer.fit_and_transform(table)
 * }
 */
@Experimental
class ExperimentalSimpleImputer(
    strategy: ExperimentalSimpleImputer.Strategy,
    @PythonName("value_to_replace") valueToReplace: union<Float, String, Nothing?> = null
) sub ExperimentalTableTransformer {
    /**
     * Various strategies to replace missing values.
     */
    enum Strategy {
        /**
         * Replace missing values with the given constant value.
         *
         * @param value The value to replace missing values.
         */
        Constant(value: Any)

        /**
         * Replace missing values with the mean of each column.
         */
        Mean

        /**
         * Replace missing values with the median of each column.
         */
        Median

        /**
         * Replace missing values with the mode of each column.
         */
        Mode
    }

    /**
     * The strategy used to replace missing values.
     */
    attr strategy: ExperimentalSimpleImputer.Strategy
    /**
     * The value that should be replaced.
     */
    @PythonName("value_to_replace") attr valueToReplace: Any

    /**
     * Learn a transformation for a set of columns in a table.
     *
     * This transformer is not modified.
     *
     * @param table The table used to fit the transformer.
     * @param columnNames The list of columns from the table used to fit the transformer. If `None`, all columns are used.
     *
     * @result fittedTransformer The fitted transformer.
     */
    @Pure
    fun fit(
        table: ExperimentalTable,
        @PythonName("column_names") columnNames: List<String>?
    ) -> fittedTransformer: ExperimentalSimpleImputer
}
