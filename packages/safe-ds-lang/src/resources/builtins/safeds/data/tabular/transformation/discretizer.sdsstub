package safeds.data.tabular.transformation

from safeds.data.tabular.containers import Table
from safeds.data.tabular.transformation import TableTransformer

/**
 * The Discretizer bins continuous data into intervals.
 *
 * @param numberOfBins The number of bins to be created.
 *
 * @example
 * pipeline example {
 *     val table = Table({"a": [1, 2, 3, 4]});
 *     val discretizer = Discretizer(2).fit(table, ["a"]);
 *     val transformedTable = discretizer.transform(table);
 *     // Table({"a": [0, 0, 1, 1]})
 * }
 */
class Discretizer(
    @PythonName("number_of_bins") const numberOfBins: Int = 5
) sub TableTransformer where {
    numberOfBins >= 2
} {
    /**
     * Learn a transformation for a set of columns in a table.
     *
     * This transformer is not modified.
     *
     * @param table The table used to fit the transformer.
     * @param columnNames The list of columns from the table used to fit the transformer. If `None`, all columns are used.
     *
     * @result result1 The fitted transformer.
     */
    @Pure
    fun fit(
        table: Table,
        @PythonName("column_names") columnNames: List<String>?
    ) -> result1: Discretizer
}
