package safeds.data.tabular.transformation

from safeds.data.tabular.containers import Table
from safeds.data.tabular.transformation import InvertibleTableTransformer

/**
 * The StandardScaler transforms column values to a range by removing the mean and scaling to unit variance.
 *
 * @param selector The list of columns used to fit the transformer. If `None`, all numeric columns are used.
 *
 * @example
 * pipeline example {
 *     val table = Table({"a": [0, 1, 0]});
 *     val scaler = StandardScaler(selector = "a").fit(table);
 *     val transformedTable = scaler.transform(table);
 *     // transformedTable = Table({"a": [-0.707,  1.414, -0.707]});
 *     val originalTable = scaler.inverseTransform(transformedTable);
 *     // originalTable = Table({"a": [1, 2, 3]});
 * }
 */
class StandardScaler(
    selector: union<List<String>, String, Nothing?> = null
) sub InvertibleTableTransformer {
    /**
     * Learn a transformation for a set of columns in a table.
     *
     * This transformer is not modified.
     *
     * @param table The table used to fit the transformer.
     *
     * @result fittedTransformer The fitted transformer.
     */
    @Pure
    fun fit(
        table: Table
    ) -> fittedTransformer: StandardScaler

    /**
     * Learn a transformation for a set of columns in a table and apply the learned transformation to the same table.
     *
     * **Note:** Neither this transformer nor the given table are modified.
     *
     * @param table The table used to fit the transformer. The transformer is then applied to this table.
     *
     * @result fittedTransformer The fitted transformer.
     * @result transformedTable The transformed table.
     */
    @Pure
    @PythonName("fit_and_transform")
    fun fitAndTransform(
        table: Table
    ) -> (fittedTransformer: StandardScaler, transformedTable: Table)
}
