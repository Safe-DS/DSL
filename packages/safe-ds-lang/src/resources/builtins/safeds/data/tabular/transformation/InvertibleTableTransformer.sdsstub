package safeds.data.tabular.transformation

from safeds.data.tabular.containers import Table
from safeds.data.tabular.transformation import TableTransformer

/**
 * A `TableTransformer` that can also undo the learned transformation after it has been applied.
 */
class InvertibleTableTransformer() sub TableTransformer {
    /**
     * Learn a transformation for a set of columns in a table.
     *
     * **Note:** This transformer is not modified.
     *
     * @param table The table used to fit the transformer.
     * @param columnNames The list of columns from the table used to fit the transformer. If `null`, all columns are used.
     *
     * @result fittedTransformer The fitted transformer.
     */
    @Pure
    fun fit(
        table: Table,
        @PythonName("column_names") columnNames: List<String>?
    ) -> fittedTransformer: InvertibleTableTransformer

    /**
     * Learn a transformation for a set of columns in a table and apply the learned transformation to the same table.
     *
     * **Note:** Neither this transformer nor the given table are modified.
     *
     * @param table The table used to fit the transformer. The transformer is then applied to this table.
     * @param columnNames The list of columns from the table used to fit the transformer. If `null`, all columns are used.
     *
     * @result fittedTransformer The fitted transformer.
     * @result transformedTable The transformed table.
     */
    @Pure
    @PythonName("fit_and_transform")
    fun fitAndTransform(
        table: Table,
        @PythonName("column_names") columnNames: List<String>? = null
    ) -> (fittedTransformer: InvertibleTableTransformer, transformedTable: Table)

    /**
     * Undo the learned transformation as well as possible.
     *
     * Column order and types may differ from the original table. Likewise, some values might not be restored.
     *
     * **Note:** The given table is not modified.
     *
     * @param transformedTable The table to be transformed back to the original version.
     *
     * @result originalTable The original table.
     */
    @Pure
    @PythonName("inverse_transform")
    fun inverseTransform(
        @PythonName("transformed_table") transformedTable: Table
    ) -> originalTable: Table
}
