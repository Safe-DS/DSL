package safeds.data.tabular.typing

/**
 * Abstract base class for column types.
 *
 * @param isNullable Whether the columntype is nullable.
 */
class ColumnType {
	/**
	 * Return whether the given column type is nullable.
	 *
	 * @result result1 True if the column is nullable.
	 */
	@Pure
	@PythonName("is_nullable")
	fun isNullable() -> result1: Boolean

	/**
	 * Return whether the given column type is numeric.
	 *
	 * @result result1 True if the column is numeric.
	 */
	@Pure
	@PythonName("is_numeric")
	fun isNumeric() -> result1: Boolean
}

/**
 * Type for a column that contains anything.
 *
 * @param isNullable Whether the type also allows null values.
 */
class Anything(
	@PythonName("is_nullable") isNullable: Boolean = false
) sub ColumnType {
	/**
	 * Return whether the given column type is nullable.
	 *
	 * @result result1 True if the column is nullable.
	 */
	@Pure
	@PythonName("is_nullable")
	fun isNullable() -> result1: Boolean

	/**
	 * Return whether the given column type is numeric.
	 *
	 * @result result1 True if the column is numeric.
	 */
	@Pure
	@PythonName("is_numeric")
	fun isNumeric() -> result1: Boolean
}

/**
 * Type for a column that only contains booleans.
 *
 * @param isNullable Whether the type also allows null values.
 */
class Boolean(
	@PythonName("is_nullable") isNullable: Boolean = false
) sub ColumnType {
	/**
	 * Return whether the given column type is nullable.
	 *
	 * @result result1 True if the column is nullable.
	 */
	@Pure
	@PythonName("is_nullable")
	fun isNullable() -> result1: Boolean

	/**
	 * Return whether the given column type is numeric.
	 *
	 * @result result1 True if the column is numeric.
	 */
	@Pure
	@PythonName("is_numeric")
	fun isNumeric() -> result1: Boolean
}

/**
 * Type for a column that only contains real numbers.
 *
 * @param isNullable Whether the type also allows null values.
 */
class RealNumber(
	@PythonName("is_nullable") isNullable: Boolean = false
) sub ColumnType {
	/**
	 * Return whether the given column type is nullable.
	 *
	 * @result result1 True if the column is nullable.
	 */
	@Pure
	@PythonName("is_nullable")
	fun isNullable() -> result1: Boolean

	/**
	 * Return whether the given column type is numeric.
	 *
	 * @result result1 True if the column is numeric.
	 */
	@Pure
	@PythonName("is_numeric")
	fun isNumeric() -> result1: Boolean
}

/**
 * Type for a column that only contains integers.
 *
 * @param isNullable Whether the type also allows null values.
 */
class Integer(
	@PythonName("is_nullable") isNullable: Boolean = false
) sub ColumnType {
	/**
	 * Return whether the given column type is nullable.
	 *
	 * @result result1 True if the column is nullable.
	 */
	@Pure
	@PythonName("is_nullable")
	fun isNullable() -> result1: Boolean

	/**
	 * Return whether the given column type is numeric.
	 *
	 * @result result1 True if the column is numeric.
	 */
	@Pure
	@PythonName("is_numeric")
	fun isNumeric() -> result1: Boolean
}

/**
 * Type for a column that only contains strings.
 *
 * @param isNullable Whether the type also allows null values.
 */
class String(
	@PythonName("is_nullable") isNullable: Boolean = false
) sub ColumnType {
	/**
	 * Return whether the given column type is nullable.
	 *
	 * @result result1 True if the column is nullable.
	 */
	@Pure
	@PythonName("is_nullable")
	fun isNullable() -> result1: Boolean

	/**
	 * Return whether the given column type is numeric.
	 *
	 * @result result1 True if the column is numeric.
	 */
	@Pure
	@PythonName("is_numeric")
	fun isNumeric() -> result1: Boolean
}

/**
 * Type for a column that contains None Values only.
 */
class Nothing() sub ColumnType {
	/**
	 * Return whether the given column type is nullable.
	 *
	 * @result result1 True if the column is nullable.
	 */
	@Pure
	@PythonName("is_nullable")
	fun isNullable() -> result1: Boolean

	/**
	 * Return whether the given column type is numeric.
	 *
	 * @result result1 True if the column is numeric.
	 */
	@Pure
	@PythonName("is_numeric")
	fun isNumeric() -> result1: Boolean
}
