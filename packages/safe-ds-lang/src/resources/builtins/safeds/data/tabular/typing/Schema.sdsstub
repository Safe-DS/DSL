package safeds.data.tabular.typing

from safeds.data.tabular.typing import ColumnType

/**
 * Store column names and corresponding data types for a `Table` or `Row`.
 *
 * @param schema Map from column names to data types.
 *
 * @example
 * pipeline example {
 *     // TODO
 * }
 */
@Experimental
class Schema {
    /**
     * Return a list of all column names saved in this schema.
     *
     * @example
     * pipeline example {
     *     // TODO
     * }
     */
    @PythonName("column_names") attr columnNames: List<String>

    /**
     * Return whether the schema contains a given column.
     *
     * @param columnName The name of the column.
     *
     * @result result1 True if the schema contains the column.
     *
     * @example
     * pipeline example {
     *     // TODO
     * }
     */
    @Pure
    @PythonName("has_column")
    fun hasColumn(
        @PythonName("column_name") columnName: String
    ) -> result1: Boolean

    /**
     * Return the type of the given column.
     *
     * @param columnName The name of the column.
     *
     * @result result1 The type of the column.
     *
     * @example
     * pipeline example {
     *     // TODO
     * }
     */
    @Pure
    @PythonName("get_column_type")
    fun getColumnType(
        @PythonName("column_name") columnName: String
    ) -> result1: ColumnType

    /**
     * Return a dictionary that maps column names to column types.
     *
     * @result result1 Dictionary representation of the schema.
     *
     * @example
     * pipeline example {
     *     // TODO
     * }
     */
    @Pure
    @PythonName("to_dict")
    fun toDict() -> result1: Map<String, ColumnType>
}
