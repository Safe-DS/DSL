package safeds.data.tabular.transformation

from safeds.data.tabular.containers import Table
from safeds.data.tabular.transformation import InvertibleTableTransformer

/**
 * The RangeScaler transforms column values by scaling each value to a given range.
 *
 * @param minimum The minimum of the new range after the transformation
 * @param maximum The maximum of the new range after the transformation
 *
 * @example
 * pipeline example {
 *     val table = Table({"a": [1, 2, 3]});
 *     val scaler = RangeScaler(0.0, 1.0).fit(table, ["a"]);
 *     val transformedTable = scaler.transform(table);
 *     // transformedTable = Table({"a": [0.0, 0.5, 1.0]});
 *     val originalTable = scaler.inverseTransform(transformedTable);
 *     // originalTable = Table({"a": [1, 2, 3]});
 * }
 */
class RangeScaler(
    const minimum: Float = 0.0,
    const maximum: Float = 1.0
) sub InvertibleTableTransformer {
    /**
     * Learn a transformation for a set of columns in a table.
     *
     * This transformer is not modified.
     *
     * @param table The table used to fit the transformer.
     * @param columnNames The list of columns from the table used to fit the transformer. If `None`, all columns are used.
     *
     * @result result1 The fitted transformer.
     */
    @Pure
    fun fit(
        table: Table,
        @PythonName("column_names") columnNames: List<String>?
    ) -> result1: RangeScaler
}
