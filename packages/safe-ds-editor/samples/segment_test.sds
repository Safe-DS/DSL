package segmentTest

segment doStuff(
    inputPath: String,
    ouputPath: String,
    sliceSize: Int
) -> (score: Float) {
    val labeledImages = Table.fromCsvFile(inputPath);
    val subsetImages = labeledImages.sliceRows(0, sliceSize);
    val train, val validate = subsetImages.splitRows(0.8);

    val modelUntrained = SupportVectorClassifier();
    val modelTrained = modelUntrained.fit(
        train.toTabularDataset(targetName = "target")
    );
    yield score = modelTrained.accuracy(validate);

    val testdata = Table.fromCsvFile("beginner_classification/test.csv");
    val testdataTransformed = testdata.transformColumn("pixel0", (row) -> row.add(1));
    val resultTable = modelTrained.predict(testdataTransformed);

    resultTable.toTable().toCsvFile(ouputPath);
}

pipeline smallTest {

    val path = "beginner_classification/train.csv";
    val score = doStuff(
        path,
        "output/beginner_classification.csv",
        5000
    );
}