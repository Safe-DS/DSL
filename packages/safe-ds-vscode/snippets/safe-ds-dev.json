{
    "Import": {
        "prefix": ["from", "import"],
        "body": ["from $1 import $0"],
        "description": "Import of declarations from a package."
    },
    "Minimal Annotation": {
        "prefix": ["minimal-annotation"],
        "body": ["annotation ${0:MyAnnotation}"],
        "description": "A minimal annotation."
    },
    "Annotation": {
        "prefix": ["annotation"],
        "body": ["${1|internal ,private |}annotation ${2:MyAnnotation}${3:($4)} ${5:where {$0\\}}"],
        "description": "An annotation."
    },
    "Attribute": {
        "prefix": ["attribute"],
        "body": ["${1|static |}attr ${2:myAttribute}: $0"],
        "description": "An attribute."
    },
    "Minimal Class": {
        "prefix": ["minimal-class"],
        "body": ["class ${0:MyClass}"],
        "description": "A minimal class."
    },
    "Global Class": {
        "prefix": ["class"],
        "body": ["${1|internal ,private |}class ${2:MyClass}${3:<$4>}${5:($6)} ${7:sub $8} ${9:where {$10\\}} ${11:{$0\\}}"],
        "description": "A global class."
    },    
    "Nested Class": {
        "prefix": ["class"],
        "body": ["class ${1:MyClass}${2:<$3>}${4:($5)} ${6:sub $7} ${8:where {$9\\}} ${10:{$0\\}}"],
        "description": "A class when nested in another class."
    },
    "Global Enum": {
        "prefix": ["enumeration"],
        "body": ["${1|internal ,private |}enum ${2:MyEnum} {", "    $0", "}"],
        "description": "A global enumeration."
    },    
    "Nested Enum": {
        "prefix": ["enumeration"],
        "body": ["enum ${1:MyEnum} {", "    $0", "}"],
        "description": "An enumeration when nested in a class."
    },
    "Minimal Pure Function": {
        "prefix": ["minimal-pure-function"],
        "body": ["@Pure", "fun ${1:myFunction}($0)"],
        "description": "A minimal pure function."
    },
    "Global Function": {
        "prefix": ["function"],
        "body": ["${1|@Pure,@Impure([])|}", "${2|internal ,private |}fun ${3:myFunction}${4:<$5>}($6) ${7:-> ($8)} ${9:where {$0\\}}"],
        "description": "A global function."
    },
    "Minimal Pure Method": {
        "prefix": ["minimal-pure-method"],
        "body": ["@Pure", "${1|static |}fun ${2:myMethod}($0)"],
        "description": "A minimal pure method."
    },
    "Method": {
        "prefix": ["method"],
        "body": [
            "${1|@Pure,@Impure([])|}",
            "${2|static |}fun ${3:myMethod}${4:<$5>}($6) ${7:-> ($8)} ${9:where {$0\\}}"
        ],
        "description": "A method."
    },
    "Pipeline": {
        "prefix": ["pipeline"],
        "body": ["pipeline ${1:myPipeline} {", "    $0", "}"],
        "description": "A pipeline."
    },
    "Schema": {
        "prefix": ["schema"],
        "body": ["${1|internal ,private |}schema ${2:MySchema} {", "    $0", "}"],
        "description": "A schema."
    },
    "Segment": {
        "prefix": ["segment"],
        "body": ["${1|internal ,private |}segment ${2:mySegment}($3) ${4:-> ($5)} ${6:where {$7\\}} {", "    $0", "}"],
        "description": "A segment."
    },
    "Minimal Segment": {
        "prefix": ["minimal-segment"],
        "body": ["segment ${1:mySegment}($2) {", "    $0", "}"],
        "description": "A segment."
    },
    "Block Lambda": {
        "prefix": ["block-lambda"],
        "body": ["($1) -> {", "    $0", "}"],
        "description": "A lambda that executes a list of statements."
    },
    "Expression Lambda": {
        "prefix": ["expression-lambda"],
        "body": ["($1) -> $0"],
        "description": "A lambda that returns a single expression."
    },
    "Block Comment": {
        "prefix": ["block-comment"],
        "body": ["/*", " * $0", " */"],
        "description": "A block comment."
    },
    "Documentation Comment": {
        "prefix": ["documentation-comment"],
        "body": ["/**", " * $0", " */"],
        "description": "A documentation comment."
    }
}
