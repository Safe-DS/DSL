package tests.typing.expressions.blockLambdas.thatArePassedAsArguments

fun higherOrderFunction1(param: (p: String) -> (r: Int, s: String))
fun higherOrderFunction2(param: () -> ())
fun normalFunction(param: Int)
fun parameterlessFunction()

segment mySegment() {
    // $TEST$ serialization (p: String) -> (r: literal<1>, s: literal<"">)
    higherOrderFunction1(»(p) {
        yield r = 1;
        yield s = "";
    }«);

    // $TEST$ serialization (p: String) -> (r: literal<1>, s: ?)
    higherOrderFunction1(param = »(p) {
        yield r, yield s = 1;
    }«);

    // $TEST$ serialization (p: ?) -> (r: literal<1>, s: literal<"">)
    higherOrderFunction2(»(p) {
        yield r = 1;
        yield s = "";
    }«);

    // $TEST$ serialization (p: ?) -> (r: literal<1>, s: ?)
    higherOrderFunction2(param = »(p) {
        yield r, yield s = 1;
    }«);

    // $TEST$ serialization (p: ?) -> (r: literal<1>, s: literal<"">)
    normalFunction(»(p) {
        yield r = 1;
        yield s = "";
    }«);

    // $TEST$ serialization (p: ?) -> (r: literal<1>, s: ?)
    normalFunction(param = »(p) {
        yield r, yield s = 1;
    }«);

    // $TEST$ serialization (p: ?) -> (r: literal<1>, s: ?)
    parameterlessFunction(»(p) {
        yield r, yield s = 1;
    }«);
}
